[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\F86854D\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\F86854D\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_331)
[debug]       Load.loadUnit: plugins took 66.4586ms
[debug]       Load.loadUnit: defsScala took 0.1824ms
[debug] [Loading] Scanning directory C:\Users\F86854D\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\F86854D\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.3021 ms
[debug]           Load.resolveProject(global-plugins) took 34.4209ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\F86854D\.sbt\1.0\plugins, plugins: List(<none>))) took 63.6201ms
[debug] [Loading] Done in C:\Users\F86854D\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 78.6558ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1775ms
[debug]     Load.loadUnit(file:/C:/Users/F86854D/.sbt/1.0/plugins/, ...) took 150.5715ms
[debug]   Load.apply: load took 287.2629ms
[debug]   Load.apply: resolveProjects took 4.2098ms
[debug]   Load.apply: finalTransforms took 38.9781ms
[debug]   Load.apply: config.delegates took 5.8663ms
[debug]   Load.apply: Def.make(settings)... took 272.7082ms
[debug]   Load.apply: structureIndex took 65.6986ms
[debug]   Load.apply: mkStreams took 1.3122ms
[info] loading global plugins from C:\Users\F86854D\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2390.0639ms
[debug]           Load.loadUnit: plugins took 19.8841ms
[debug]           Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project
[debug]             Load.loadUnit: mkEval took 7.0316ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4621 ms
[info] loading settings for project udemy-scala-beginners-new-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-beginners-new-build) took 4.661ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-beginners-new-build, base: C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, plugins: List(<none>))) took 6.5743ms
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, returning: (udemy-scala-beginners-new-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 112.4731ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.4946ms
[debug]         Load.loadUnit(file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/project/, ...) took 136.9565ms
[debug]       Load.apply: load took 138.1103ms
[debug]       Load.apply: resolveProjects took 0.0905ms
[debug]       Load.apply: finalTransforms took 5.9597ms
[debug]       Load.apply: config.delegates took 0.4902ms
[debug]       Load.apply: Def.make(settings)... took 91.5748ms
[debug]       Load.apply: structureIndex took 20.8133ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5492.2289ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new
[debug]       Load.loadUnit: mkEval took 0.2881ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1845 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 25.0574ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new, plugins: List(<none>))) took 28.9309ms
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1649.3172ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.743ms
[debug]   Load.loadUnit(file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/, ...) took 7150.965ms
[debug] Load.apply: load took 7152.3967ms
[debug] Load.apply: resolveProjects took 0.1ms
[debug] Load.apply: finalTransforms took 18.2516ms
[debug] Load.apply: config.delegates took 0.2281ms
[debug] Load.apply: Def.make(settings)... took 55.4997ms
[debug] Load.apply: structureIndex took 14.4523ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to udemy-scala-beginners-new (in build file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59545 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59545, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-beginners-new (in build file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/)
[debug] > Exec(idea-shell, None, None)
