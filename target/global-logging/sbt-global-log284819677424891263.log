[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\F86854D\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\F86854D\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_331)
[debug]       Load.loadUnit: plugins took 76.4132ms
[debug]       Load.loadUnit: defsScala took 0.2418ms
[debug] [Loading] Scanning directory C:\Users\F86854D\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\F86854D\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.3235 ms
[debug]           Load.resolveProject(global-plugins) took 37.2559ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\F86854D\.sbt\1.0\plugins, plugins: List(<none>))) took 68.8793ms
[debug] [Loading] Done in C:\Users\F86854D\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 86.1755ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.189ms
[debug]     Load.loadUnit(file:/C:/Users/F86854D/.sbt/1.0/plugins/, ...) took 169.0136ms
[debug]   Load.apply: load took 319.23ms
[debug]   Load.apply: resolveProjects took 4.5092ms
[debug]   Load.apply: finalTransforms took 39.9703ms
[debug]   Load.apply: config.delegates took 5.7642ms
[debug]   Load.apply: Def.make(settings)... took 301.7688ms
[debug]   Load.apply: structureIndex took 70.2607ms
[debug]   Load.apply: mkStreams took 1.6232ms
[info] loading global plugins from C:\Users\F86854D\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6841.3635ms
[debug]           Load.loadUnit: plugins took 22.7241ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project
[debug]             Load.loadUnit: mkEval took 9.7889ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6988 ms
[info] loading settings for project udemy-scala-beginners-new-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-beginners-new-build) took 4.724ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-beginners-new-build, base: C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, plugins: List(<none>))) took 6.9225ms
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project, returning: (udemy-scala-beginners-new-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2093.3838ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.787ms
[debug]         Load.loadUnit(file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/project/, ...) took 2121.9382ms
[debug]       Load.apply: load took 2123.6885ms
[debug]       Load.apply: resolveProjects took 0.1211ms
[debug]       Load.apply: finalTransforms took 12.1606ms
[debug]       Load.apply: config.delegates took 0.7481ms
[debug]       Load.apply: Def.make(settings)... took 122.5952ms
[debug]       Load.apply: structureIndex took 80.5331ms
[debug]       Load.apply: mkStreams took 0.0044ms
[info] loading project definition from C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2806.7169ms
[debug]     Load.loadUnit: defsScala took 0.0079ms
[debug] [Loading] Scanning directory C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new
[debug]       Load.loadUnit: mkEval took 0.4747ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0306 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 27.8451ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new, plugins: List(<none>))) took 31.6612ms
[debug] [Loading] Done in C:\Users\F86854D\IdeaProjects\udemy-scala-beginners-new, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 901.1902ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.9302ms
[debug]   Load.loadUnit(file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/, ...) took 3721.3457ms
[debug] Load.apply: load took 3723.3903ms
[debug] Load.apply: resolveProjects took 0.1277ms
[debug] Load.apply: finalTransforms took 29.8888ms
[debug] Load.apply: config.delegates took 1.1746ms
[debug] Load.apply: Def.make(settings)... took 84.8153ms
[debug] Load.apply: structureIndex took 36.7159ms
[debug] Load.apply: mkStreams took 0.0044ms
[info] set current project to udemy-scala-beginners-new (in build file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49954 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49954, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-beginners-new (in build file:/C:/Users/F86854D/IdeaProjects/udemy-scala-beginners-new/)
[debug] > Exec(idea-shell, None, None)
